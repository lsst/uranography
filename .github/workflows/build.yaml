name: test_and_build

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

jobs:
  test_and_build:
    name: (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true

      - name: Update pip/wheel infrastructure
        shell: bash -l {0}
        run: |
          conda install -y -q pip wheel
      - name: configure conda and install requirements
        shell: bash -l {0}
        run: |
          conda config --set always_yes yes
          conda install --quiet --file=requirements.txt
          conda install --quiet --file=test-requirements.txt
      - name: install uranography
        shell: bash -l {0}
        run: |
          echo `pwd`
          python -m pip install .
      - name: conda list
        shell: bash -l {0}
        run: conda list
      - name: run unit tests
        shell: bash -l {0}
        run: |
          pytest

  pypi:

    runs-on: ubuntu-latest
    needs: [test_and_build]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v3
        with:
          # Need to clone everything to embed the version.
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: "pip"
          cache-dependency-path: "setup.cfg"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel build

      - name: Build and create distribution
        run: |
          python -m build --skip-dependency-check
"""
      - name: Upload
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.SP_PYPI_UPLOADS }}
"""